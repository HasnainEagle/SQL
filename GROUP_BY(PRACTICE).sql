CREATE TABLE MOVIES (
	MOVIEID INT PRIMARY KEY,
	TITLE VARCHAR(100),
	GENRE VARCHAR(50),
	DIRECTOR VARCHAR(100),
	YEAR INT,
	RUNTIMEMINUTES INT,
	RATING FLOAT,
	VOTES INT,
	REVENUEMILLIONS FLOAT
);

INSERT INTO
	MOVIES (
		MOVIEID,
		TITLE,
		GENRE,
		DIRECTOR,
		YEAR,
		RUNTIMEMINUTES,
		RATING,
		VOTES,
		REVENUEMILLIONS
	)
VALUES
	(
		1,
		'Movie A',
		'Action',
		'Director 1',
		2020,
		120,
		7.5,
		150000,
		50.0
	),
	(
		2,
		'Movie B',
		'Drama',
		'Director 2',
		2019,
		135,
		8.0,
		200000,
		70.0
	),
	(
		3,
		'Movie C',
		'Action',
		'Director 1',
		2018,
		110,
		6.5,
		100000,
		30.0
	),
	(
		4,
		'Movie D',
		'Comedy',
		'Director 3',
		2020,
		95,
		7.0,
		80000,
		20.0
	),
	(
		5,
		'Movie E',
		'Drama',
		'Director 2',
		2021,
		140,
		8.5,
		250000,
		90.0
	),
	(
		6,
		'Movie F',
		'Action',
		'Director 4',
		2019,
		130,
		7.2,
		120000,
		40.0
	),
	(
		7,
		'Movie G',
		'Comedy',
		'Director 3',
		2018,
		100,
		6.8,
		90000,
		25.0
	),
	(
		8,
		'Movie H',
		'Drama',
		'Director 5',
		2020,
		150,
		7.8,
		175000,
		60.0
	),
	(
		9,
		'Movie I',
		'Action',
		'Director 6',
		2021,
		125,
		7.4,
		140000,
		55.0
	),
	(
		10,
		'Movie J',
		'Comedy',
		'Director 7',
		2019,
		85,
		6.0,
		50000,
		15.0
	);

SELECT
	*
FROM
	MOVIES
	-- Find the average rating for each genre.
SELECT
	GENRE,
	AVG(RATING) AS AVG_RATING
FROM
	MOVIES
GROUP BY
	(GENRE);

-- Count the number of movies released each year.
SELECT
	YEAR,
	COUNT(MOVIEID) AS NO_OF_MOVIES
FROM
	MOVIES
GROUP BY
	(YEAR);

-- Find the total revenue for each director.
SELECT
	DIRECTOR,
	SUM(REVENUEMILLIONS) AS TOTAL_REVENUE
FROM
	MOVIES
GROUP BY
	(DIRECTOR);

-- List the average runtime of movies for each genre where the average runtime is greater than 120 minutes.
SELECT
	GENRE,
	AVG(RUNTIMEMINUTES) AS AVG_RUNTIME
FROM
	MOVIES
GROUP BY
	(GENRE)
HAVING
	AVG(RUNTIMEMINUTES) > 120;

-- Find the highest-rated movie for each year.
-- SELECT YEAR,TITLE, MAX(RATING) AS MAX_RATING FROM MOVIES 
-- GROUP BY(YEAR);
SELECT
	M.YEAR,
	M.TITLE,
	M.RATING
FROM
	MOVIES M
WHERE
	M.RATING = (
		SELECT
			MAX(RATING)
		FROM
			MOVIES
		WHERE
			YEAR = M.YEAR
	);

-- Calculate the total votes for each genre.
SELECT
	GENRE,
	SUM(VOTES) AS TOTAL_VOTES
FROM
	MOVIES
GROUP BY
	(GENRE);

-- Find the average revenue for directors who have directed more than one movie.
SELECT
	DIRECTOR,
	AVG(REVENUEMILLIONS) AS AVG_REVENUE
FROM
	MOVIES
GROUP BY
	(DIRECTOR)
HAVING
	COUNT(DIRECTOR) > 1;

-- List the number of movies and the average rating for each director, having an average rating greater than 7.0.
SELECT
	DIRECTOR,
	COUNT(MOVIEID) AS NO_OF_MOVIES,
	AVG(RATING) AS AVG_RATING
FROM
	MOVIES
GROUP BY
	DIRECTOR
HAVING
	AVG(RATING) > 7.0
	-- find the total revenue generated by movies released in 2020.
SELECT
	YEAR,
	SUM(REVENUEMILLIONS) AS TOTAL_REVENUE
FROM
	MOVIES
GROUP BY
	YEAR
HAVING
	YEAR = 2020;

-- Calculate the average rating for each genre, having at least 3 movies in that genre.
SELECT
	GENRE,
	AVG(RATING) AS AVG_
FROM
	MOVIES
GROUP BY
	GENRE
HAVING
	COUNT(MOVIEID) >= 3;